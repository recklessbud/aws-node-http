name: Deploy Dev Stage

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      API_KEY: ${{ secrets.NEON_API_KEY }}
      STAGE: dev
      GH_TOKEN: ${{ github.token }} # github cli -> gh
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20.11"
        cache: 'npm'
    - name: clean Cache
      run: npm cache clean --force
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    - name: Install neonctl, serverless and tsx
      run: npm install -g neonctl serverless tsx --legacy-peer-deps
    - name: Authenticate Serverless Framework
      run: echo "SERVERLESS_ACCESS_KEY=${{ secrets.SERVERLESS_ACCESS_KEY }}" >> $GITHUB_ENV        
    - name: Get Database URL from ssm
      run: |
        DIRECT_URL=$(aws ssm get-parameters --name "/serverless-demo/dev/direct-url" --with-decryption  --query "Parameters[0].Value" --output text)
        echo "DIRECT_URL=$DIRECT_URL" >> $GITHUB_ENV
    - name: Use the direct url
      run: |
        echo "DIRECT_URL:${{ env.DIRECT_URL }}"
    - name: Get Database URL from ssm
      run: |
        DATABASE_URL=$(aws ssm get-parameters --name "/serverless-demo/dev/database-url" --with-decryption --query "Parameters[0].Value" --output text)
        echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
    - name: Use the database url
      run: |
        echo "DATABASE_URL:${{ env.DATABASE_URL }}"
    - name: Run Migrations
      run: |
        npx prisma migrate deploy
    - name: Remove dev stage
      run: |
        npm run remove:dev
    - name: Deploy dev stage
      run: |
        npm run deploy:dev
    - name: Remove prod stage
      run: |
        npm run remove:prod
    - name: Dev Stage Pull Request
      run: |
        export PR_BRANCH=$(git branch --show-current)
        export DEFAULT_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
        echo "$PR_BRANCH and $DEFAULT_BRANCH"
        export DEV_STAGE_INFO=$(npm run info:dev)
        gh pr create --title "Automated PR from Dev Stage" --body "$DEV_STAGE_INFO" --base $DEFAULT_BRANCH --head $PR_BRANCH --repo $GITHUB_REPOSITORY